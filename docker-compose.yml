version: '3.8'

services:
  # üêò Base de Datos PostgreSQL
  db:
    image: postgres:13-alpine
    container_name: inventorypro_db
    environment:  # ‚úÖ SOLO variables de entorno aqu√≠
      POSTGRES_DB: inventorypro
      POSTGRES_USER: django
      POSTGRES_PASSWORD: django123
    volumes:  # ‚úÖ VOLUMES va al mismo nivel que environment
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U django"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üêç Backend Django
  backend:
    build: ./backend
    container_name: inventorypro_backend
    environment:
      DEBUG: "True"
      DB_NAME: inventorypro
      DB_USER: django
      DB_PASSWORD: django123
      DB_HOST: db
      DB_PORT: "5432"
      PYTHONUNBUFFERED: "1"
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  # ‚öõÔ∏è Frontend React
  frontend:
    build: ./frontend
    container_name: inventorypro_frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local